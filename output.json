[{"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "estrada_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "radius", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "estrada_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "estrada_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "estrada_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "estrada_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "estrada_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "estrada_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "connected_double_edge_swap", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "estrada_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "estrada_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_equal"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_equal"}, {"algorithm": "estrada_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_equal"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "diameter", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "average_shortest_path_length", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "diameter", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "average_shortest_path_length", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "connected_double_edge_swap", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_bridges", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_biconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "local_efficiency", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_efficiency", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "transitivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_biconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "radius", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_bridges", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "estrada_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "transitivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_biconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "local_efficiency", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_efficiency", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_biconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "local_efficiency", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_efficiency", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "transitivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "estrada_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "transitivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_biconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "local_efficiency", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_efficiency", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_bridges", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_biconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "local_efficiency", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_efficiency", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "transitivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_bridges", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "estrada_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "transitivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_biconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "local_efficiency", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_efficiency", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_biconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "local_efficiency", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_efficiency", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "transitivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "estrada_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "transitivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_biconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "local_efficiency", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_efficiency", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "connected_double_edge_swap", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_bridges", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_biconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "local_efficiency", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_efficiency", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "transitivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_bridges", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "estrada_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "transitivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_biconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "local_efficiency", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_efficiency", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_biconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "local_efficiency", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_efficiency", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "transitivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "estrada_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "transitivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_biconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "local_efficiency", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_efficiency", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_bridges", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_biconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "local_efficiency", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_efficiency", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "transitivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_bridges", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "estrada_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "transitivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_biconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "local_efficiency", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_efficiency", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_biconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "local_efficiency", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_efficiency", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "transitivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "estrada_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "transitivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_biconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "local_efficiency", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_efficiency", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_bridges", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_biconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "local_efficiency", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_efficiency", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "transitivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_bridges", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "estrada_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "transitivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_biconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "local_efficiency", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_efficiency", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_biconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "local_efficiency", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_efficiency", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "connected_double_edge_swap", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "transitivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "sum_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "radius", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "sum_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "estrada_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "transitivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_biconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "local_efficiency", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "global_efficiency", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "sum_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triadic_census", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "trophic_differences", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triadic_census", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "trophic_differences", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "dfs_predecessors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triadic_census", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "second_order_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triangles", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triangles", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "dfs_predecessors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_degree_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "second_order_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "percolation_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "trophic_differences", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_degree_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "second_order_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triangles", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "onion_layers", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "percolation_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triangles", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "onion_layers", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "second_order_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_degree_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "trophic_differences", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triadic_census", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triadic_census", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_degree_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "second_order_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triangles", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "onion_layers", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "percolation_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triangles", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "onion_layers", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_degree_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "second_order_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_degree_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triadic_census", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "percolation_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "trophic_differences", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_degree_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "second_order_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triangles", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triangles", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "onion_layers", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_predecessors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triadic_census", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triadic_census", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triadic_census", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_degree_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "second_order_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triangles", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "onion_layers", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triangles", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "onion_layers", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triadic_census", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_degree_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_degree_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "trophic_differences", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_predecessors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triadic_census", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "percolation_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "trophic_differences", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_degree_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triangles", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triangles", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "onion_layers", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "trophic_differences", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triadic_census", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "percolation_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_degree_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triangles", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triangles", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "dfs_predecessors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "second_order_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_predecessors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triadic_census", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "percolation_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "trophic_differences", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_degree_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triangles", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "percolation_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triangles", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "onion_layers", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triadic_census", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_degree_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triadic_census", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "dfs_predecessors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triadic_census", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_degree_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "second_order_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triangles", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "onion_layers", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triangles", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "onion_layers", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_degree_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_predecessors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triadic_census", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_degree_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "trophic_differences", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "trophic_differences", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "average_degree_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "second_order_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "triangles", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "eccentricity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_smaller"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "edge_load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "subgraph_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "triangles", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "onion_layers", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_smaller"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "trophic_levels", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "trophic_levels", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "trophic_differences", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_predecessors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "subgraph_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "triangles", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "trophic_differences", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "subgraph_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "triangles", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "subgraph_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "triangles", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "average_degree_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "trophic_differences", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "subgraph_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "triangles", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "trophic_differences", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "trophic_differences", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "subgraph_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "triangles", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "percolation_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "trophic_differences", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "subgraph_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "triangles", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "subgraph_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "triangles", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "trophic_differences", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "subgraph_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "triangles", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "trophic_levels", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "subgraph_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "triangles", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "onion_layers", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "percolation_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "trophic_differences", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "percolation_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_equal"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "percolation_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "subgraph_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "triangles", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_equal"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "in_degree_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "out_degree_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_predecessors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality_numpy", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "trophic_differences", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "in_degree_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "out_degree_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "percolation_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "trophic_levels", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_predecessors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "subgraph_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "triangles", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "onion_layers", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "in_degree_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "out_degree_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_current_flow_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality_numpy", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "in_degree_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "out_degree_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "trophic_differences", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_current_flow_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "current_flow_closeness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "information_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "percolation_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "subgraph_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "triangles", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "in_degree_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "out_degree_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "trophic_differences", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "in_degree_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "out_degree_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "trophic_levels", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "current_flow_closeness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "information_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "subgraph_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "triangles", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "in_degree_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "out_degree_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_predecessors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_current_flow_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "in_degree_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "out_degree_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "trophic_differences", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "average_degree_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_current_flow_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "current_flow_closeness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "information_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_predecessors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "subgraph_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "triangles", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "in_degree_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "out_degree_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality_numpy", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "in_degree_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "out_degree_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "trophic_levels", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "trophic_differences", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "subgraph_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "triangles", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "average_degree_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "in_degree_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "out_degree_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality_numpy", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_current_flow_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality_numpy", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "in_degree_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "out_degree_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_current_flow_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "percolation_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "subgraph_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "triangles", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "in_degree_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "out_degree_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality_numpy", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "trophic_levels", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "in_degree_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "out_degree_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "current_flow_closeness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "information_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "percolation_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "subgraph_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "triangles", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "onion_layers", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "in_degree_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "out_degree_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_current_flow_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality_numpy", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "in_degree_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "out_degree_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "percolation_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "trophic_differences", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_current_flow_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_degree_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "subgraph_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "triangles", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "in_degree_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "out_degree_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "trophic_differences", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_current_flow_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_predecessors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "in_degree_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "out_degree_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "trophic_levels", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "trophic_differences", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_predecessors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_current_flow_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "subgraph_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "triangles", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "node_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "core_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "onion_layers", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "in_degree_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "out_degree_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_current_flow_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality_numpy", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "in_degree_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "out_degree_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "trophic_levels", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "trophic_differences", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "triads_by_type", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_vitality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "edge_current_flow_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "node_dict_greater"}, {"algorithm": "degree_mixing_dict", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "average_neighbor_degree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "edge_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "closeness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "degree_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "eigenvector_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "harmonic_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "katz_centrality_numpy", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "load_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "percolation_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "subgraph_centrality_exp", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "subgraph_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "communicability_betweenness_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "laplacian_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "triangles", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "square_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "node_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "greedy_color", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "core_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "pagerank", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "constraint", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "effective_size", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "dfs_successors", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "node_dict_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_shortest_path_length", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "has_bridges", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "estrada_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "has_bridges", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "estrada_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "connected_double_edge_swap", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_biconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "local_efficiency", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "connected_double_edge_swap", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "transitivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "estrada_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "transitivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "local_efficiency", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_shortest_path_length", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "estrada_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "transitivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_shortest_path_length", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "has_bridges", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "connected_double_edge_swap", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "transitivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "estrada_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "transitivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "has_bridges", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "estrada_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "connected_double_edge_swap", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_shortest_path_length", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "connected_double_edge_swap", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "estrada_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "estrada_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "connected_double_edge_swap", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "global_reaching_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "has_bridges", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "connected_double_edge_swap", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "transitivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "estrada_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "transitivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "has_bridges", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "estrada_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_shortest_path_length", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "connected_double_edge_swap", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "transitivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "estrada_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "transitivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "local_efficiency", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_shortest_path_length", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "estrada_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "connected_double_edge_swap", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_shortest_path_length", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "has_bridges", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "connected_double_edge_swap", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_clustering", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "transitivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "estrada_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "has_bridges", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "estrada_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_shortest_path_length", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_shortest_path_length", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "connected_double_edge_swap", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "estrada_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "transitivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "local_efficiency", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "estrada_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_shortest_path_length", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "has_bridges", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "connected_double_edge_swap", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_strongly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_weakly_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_attracting_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "estrada_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_shortest_path_length", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "has_bridges", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "estrada_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_connected_components", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "connected_double_edge_swap", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_shortest_path_length", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "connected_double_edge_swap", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_strongly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_weakly_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_attracting_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "estrada_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "average_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "transitivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "diameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "radius", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "local_efficiency", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_smaller"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "has_bridges", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "estrada_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_clique_number", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "graph_number_of_cliques", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "connected_double_edge_swap", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "wiener_index", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_smaller"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "average_clustering", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "transitivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "local_efficiency", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "connected_double_edge_swap", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_equal"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_equal"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_biconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_biconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "number_connected_components", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_biconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "global_efficiency", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_biconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_biconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_biconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_biconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "trophic_incoherence_parameter", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_biconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_biconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "chordal_graph_treewidth", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_biconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "dag_longest_path_length", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "number_of_isolates", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_biconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "average_node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "global_reaching_centrality", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_biconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_biconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_biconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_biconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "global_efficiency", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_pearson_correlation_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_biconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "flow_hierarchy", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_biconnected", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semiconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_aperiodic", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_chordal", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_at_free", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_connected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_biconnected", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": true, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_biconnected", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "global_efficiency", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": true, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_assortativity_coefficient", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_weakly_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_attracting_component", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semiconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_aperiodic", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "min_cost_flow_cost", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_arborescence", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_branching", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": true, "connected": false, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_bipartite", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": true, "rules": "value_greater"}, {"algorithm": "degree_mixing_matrix", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_at_free", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_chordal", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_connected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_biconnected", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_directed_acyclic_graph", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_distance_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_strongly_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_eulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_semieulerian", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "has_eulerian_path", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_graphical", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_erdos_gallai", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_valid_degree_sequence_havel_hakimi", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_planar", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "overall_reciprocity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_regular", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "negative_edge_cycle", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_triad", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "edge_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "node_connectivity", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_forest", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}, {"algorithm": "is_tree", "allow_loops": false, "allow_parallel_edge": false, "is_directed": false, "connected": false, "rules": "value_greater"}]